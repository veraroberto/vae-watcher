{
  "nbformat": 4,
  "nbformat_minor": 5,
  "metadata": {
    "kernelspec": {
      "display_name": "Python [conda env:PythonData] *",
      "language": "python",
      "name": "conda-env-PythonData-py"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.10"
    },
    "colab": {
      "name": "Vaccines prediction.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/verocastillo/vae-watcher/blob/main/Vaccines_prediction.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "efe65000",
        "outputId": "7acba7fe-fe54-4e86-f7f0-7f7b0b2d5e23"
      },
      "source": [
        "!pip install fbprophet"
      ],
      "id": "efe65000",
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: fbprophet in /usr/local/lib/python3.7/dist-packages (0.7.1)\n",
            "Requirement already satisfied: Cython>=0.22 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (0.29.24)\n",
            "Requirement already satisfied: cmdstanpy==0.9.5 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (0.9.5)\n",
            "Requirement already satisfied: pystan>=2.14 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (2.19.1.1)\n",
            "Requirement already satisfied: numpy>=1.15.4 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (1.19.5)\n",
            "Requirement already satisfied: pandas>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (1.1.5)\n",
            "Requirement already satisfied: matplotlib>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (3.2.2)\n",
            "Requirement already satisfied: LunarCalendar>=0.0.9 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (0.0.9)\n",
            "Requirement already satisfied: convertdate>=2.1.2 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (2.3.2)\n",
            "Requirement already satisfied: holidays>=0.10.2 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (0.10.5.2)\n",
            "Requirement already satisfied: setuptools-git>=1.2 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (1.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.0 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (2.8.2)\n",
            "Requirement already satisfied: tqdm>=4.36.1 in /usr/local/lib/python3.7/dist-packages (from fbprophet) (4.62.0)\n",
            "Requirement already satisfied: pymeeus<=1,>=0.3.13 in /usr/local/lib/python3.7/dist-packages (from convertdate>=2.1.2->fbprophet) (0.5.11)\n",
            "Requirement already satisfied: pytz>=2014.10 in /usr/local/lib/python3.7/dist-packages (from convertdate>=2.1.2->fbprophet) (2018.9)\n",
            "Requirement already satisfied: hijri-converter in /usr/local/lib/python3.7/dist-packages (from holidays>=0.10.2->fbprophet) (2.1.3)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from holidays>=0.10.2->fbprophet) (1.15.0)\n",
            "Requirement already satisfied: korean-lunar-calendar in /usr/local/lib/python3.7/dist-packages (from holidays>=0.10.2->fbprophet) (0.2.1)\n",
            "Requirement already satisfied: ephem>=3.7.5.3 in /usr/local/lib/python3.7/dist-packages (from LunarCalendar>=0.0.9->fbprophet) (4.0.0.2)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.0.0->fbprophet) (2.4.7)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.0.0->fbprophet) (1.3.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=2.0.0->fbprophet) (0.10.0)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f4c7f3f1"
      },
      "source": [
        "import pandas as pd \n",
        "import matplotlib.pyplot as plt\n",
        "from fbprophet import Prophet \n",
        "# print(f'Version {fbprophet.__version__}')"
      ],
      "id": "f4c7f3f1",
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 615
        },
        "id": "9c958534",
        "outputId": "c41c9e11-fc53-41ca-b793-66eeeaacfa95"
      },
      "source": [
        "# raw_df = pd.read_json(\"https://vae-watcher.herokuapp.com/api\")\n",
        "raw_df = pd.read_csv(\"/content/sample_data/Vaccines_Dataset (2).csv\")\n",
        "raw_df.head()"
      ],
      "id": "9c958534",
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Unnamed: 0</th>\n",
              "      <th>VAERS_ID</th>\n",
              "      <th>RECVDATE</th>\n",
              "      <th>STATE</th>\n",
              "      <th>STATE_NAME</th>\n",
              "      <th>LATITUDE</th>\n",
              "      <th>LONGITUDE</th>\n",
              "      <th>AGE_YRS</th>\n",
              "      <th>SEX</th>\n",
              "      <th>SYMPTOM_TEXT</th>\n",
              "      <th>DIED</th>\n",
              "      <th>DATEDIED</th>\n",
              "      <th>L_THREAT</th>\n",
              "      <th>ER_VISIT</th>\n",
              "      <th>HOSPITAL</th>\n",
              "      <th>HOSPDAYS</th>\n",
              "      <th>X_STAY</th>\n",
              "      <th>DISABLE</th>\n",
              "      <th>RECOVD</th>\n",
              "      <th>VAX_DATE</th>\n",
              "      <th>ONSET_DATE</th>\n",
              "      <th>NUMDAYS</th>\n",
              "      <th>LAB_DATA</th>\n",
              "      <th>OTHER_MEDS</th>\n",
              "      <th>CUR_ILL</th>\n",
              "      <th>HISTORY</th>\n",
              "      <th>PRIOR_VAX</th>\n",
              "      <th>BIRTH_DEFECT</th>\n",
              "      <th>OFC_VISIT</th>\n",
              "      <th>ER_ED_VISIT</th>\n",
              "      <th>ALLERGIES</th>\n",
              "      <th>VAX_TYPE</th>\n",
              "      <th>VAX_MANU</th>\n",
              "      <th>VAX_LOT</th>\n",
              "      <th>VAX_DOSE_SERIES</th>\n",
              "      <th>VAX_ROUTE</th>\n",
              "      <th>VAX_SITE</th>\n",
              "      <th>VAX_NAME</th>\n",
              "      <th>SYMPTOM1</th>\n",
              "      <th>SYMPTOM2</th>\n",
              "      <th>SYMPTOM3</th>\n",
              "      <th>SYMPTOM4</th>\n",
              "      <th>SYMPTOM5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>916600</td>\n",
              "      <td>1/1/2021</td>\n",
              "      <td>TX</td>\n",
              "      <td>Texas</td>\n",
              "      <td>31.968599</td>\n",
              "      <td>-99.901813</td>\n",
              "      <td>33.0</td>\n",
              "      <td>F</td>\n",
              "      <td>Right side of epiglottis swelled up and hinder...</td>\n",
              "      <td>No</td>\n",
              "      <td>Alive</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>12/28/2020</td>\n",
              "      <td>12/30/2020</td>\n",
              "      <td>2</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>Pcn and bee venom</td>\n",
              "      <td>COVID19</td>\n",
              "      <td>MODERNA</td>\n",
              "      <td>037K20A</td>\n",
              "      <td>1</td>\n",
              "      <td>IM</td>\n",
              "      <td>LA</td>\n",
              "      <td>COVID19 (COVID19 (MODERNA))</td>\n",
              "      <td>Dysphagia</td>\n",
              "      <td>Epiglottitis</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>916601</td>\n",
              "      <td>1/1/2021</td>\n",
              "      <td>CA</td>\n",
              "      <td>California</td>\n",
              "      <td>36.778261</td>\n",
              "      <td>-119.417932</td>\n",
              "      <td>73.0</td>\n",
              "      <td>F</td>\n",
              "      <td>Approximately 30 min post vaccination administ...</td>\n",
              "      <td>No</td>\n",
              "      <td>Alive</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>12/31/2020</td>\n",
              "      <td>12/31/2020</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>Patient residing at nursing facility. See pati...</td>\n",
              "      <td>Patient residing at nursing facility. See pati...</td>\n",
              "      <td>Patient residing at nursing facility. See pati...</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>No</td>\n",
              "      <td>\"Dairy\"</td>\n",
              "      <td>COVID19</td>\n",
              "      <td>MODERNA</td>\n",
              "      <td>025L20A</td>\n",
              "      <td>1</td>\n",
              "      <td>IM</td>\n",
              "      <td>RA</td>\n",
              "      <td>COVID19 (COVID19 (MODERNA))</td>\n",
              "      <td>Anxiety</td>\n",
              "      <td>Dyspnoea</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>916602</td>\n",
              "      <td>1/1/2021</td>\n",
              "      <td>WA</td>\n",
              "      <td>Washington</td>\n",
              "      <td>47.751074</td>\n",
              "      <td>-120.740139</td>\n",
              "      <td>23.0</td>\n",
              "      <td>F</td>\n",
              "      <td>About 15 minutes after receiving the vaccine, ...</td>\n",
              "      <td>No</td>\n",
              "      <td>Alive</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Unknown</td>\n",
              "      <td>12/31/2020</td>\n",
              "      <td>12/31/2020</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Shellfish</td>\n",
              "      <td>COVID19</td>\n",
              "      <td>PFIZER\\BIONTECH</td>\n",
              "      <td>EL1284</td>\n",
              "      <td>1</td>\n",
              "      <td>IM</td>\n",
              "      <td>LA</td>\n",
              "      <td>COVID19 (COVID19 (PFIZER-BIONTECH))</td>\n",
              "      <td>Chest discomfort</td>\n",
              "      <td>Dysphagia</td>\n",
              "      <td>Pain in extremity</td>\n",
              "      <td>Visual impairment</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>916603</td>\n",
              "      <td>1/1/2021</td>\n",
              "      <td>WA</td>\n",
              "      <td>Washington</td>\n",
              "      <td>47.751074</td>\n",
              "      <td>-120.740139</td>\n",
              "      <td>58.0</td>\n",
              "      <td>F</td>\n",
              "      <td>extreme fatigue, dizziness,. could not lift my...</td>\n",
              "      <td>No</td>\n",
              "      <td>Alive</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Yes</td>\n",
              "      <td>12/23/2020</td>\n",
              "      <td>12/23/2020</td>\n",
              "      <td>0</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>kidney infection</td>\n",
              "      <td>diverticulitis, mitral valve prolapse, osteoar...</td>\n",
              "      <td>got measles from measel shot, mums from mumps ...</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Diclofenac, novacaine, lidocaine, pickles, tom...</td>\n",
              "      <td>COVID19</td>\n",
              "      <td>MODERNA</td>\n",
              "      <td>unknown</td>\n",
              "      <td>UNK</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>COVID19 (COVID19 (MODERNA))</td>\n",
              "      <td>Dizziness</td>\n",
              "      <td>Fatigue</td>\n",
              "      <td>Mobility decreased</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>916604</td>\n",
              "      <td>1/1/2021</td>\n",
              "      <td>TX</td>\n",
              "      <td>Texas</td>\n",
              "      <td>31.968599</td>\n",
              "      <td>-99.901813</td>\n",
              "      <td>47.0</td>\n",
              "      <td>F</td>\n",
              "      <td>Injection site swelling, redness, warm to the ...</td>\n",
              "      <td>No</td>\n",
              "      <td>Alive</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>0</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>12/22/2020</td>\n",
              "      <td>12/29/2020</td>\n",
              "      <td>7</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Na</td>\n",
              "      <td>COVID19</td>\n",
              "      <td>MODERNA</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>IM</td>\n",
              "      <td>LA</td>\n",
              "      <td>COVID19 (COVID19 (MODERNA))</td>\n",
              "      <td>Injection site erythema</td>\n",
              "      <td>Injection site pruritus</td>\n",
              "      <td>Injection site swelling</td>\n",
              "      <td>Injection site warmth</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Unnamed: 0  VAERS_ID  ...               SYMPTOM4 SYMPTOM5\n",
              "0           0    916600  ...                   None     None\n",
              "1           1    916601  ...                   None     None\n",
              "2           2    916602  ...      Visual impairment     None\n",
              "3           3    916603  ...                   None     None\n",
              "4           4    916604  ...  Injection site warmth     None\n",
              "\n",
              "[5 rows x 43 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J_LsfsGWl-Yp",
        "outputId": "4ffabd80-6e46-402a-8071-22df0bfc1bc3"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('../content/drive')"
      ],
      "id": "J_LsfsGWl-Yp",
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mounted at ../content/drive\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "id": "896c3f79",
        "outputId": "827a85ee-9135-4d38-be25-f69ab1f53f33"
      },
      "source": [
        "vaccine_number_df = raw_df.groupby([\"ONSET_DATE\"])[\"VAERS_ID\"].count().reset_index()\n",
        "vaccine_number_df.head()"
      ],
      "id": "896c3f79",
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ONSET_DATE</th>\n",
              "      <th>VAERS_ID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>01/01/2021</td>\n",
              "      <td>589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>01/02/2021</td>\n",
              "      <td>516</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>01/03/2020</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>01/03/2021</td>\n",
              "      <td>437</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>01/04/2020</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   ONSET_DATE  VAERS_ID\n",
              "0  01/01/2021       589\n",
              "1  01/02/2021       516\n",
              "2  01/03/2020         1\n",
              "3  01/03/2021       437\n",
              "4  01/04/2020         5"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "c9a65dbc",
        "outputId": "fb2738a4-9ab4-4a75-e6de-72056ca94f24"
      },
      "source": [
        "vaccine_number_df.plot()"
      ],
      "id": "c9a65dbc",
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f6ce7659990>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cd8c1d77",
        "outputId": "9f570325-0030-4520-a412-e3fcc6e1bcb4"
      },
      "source": [
        "vaccine_number_df.columns = ['ds', 'y']\n",
        "vaccine_number_df[\"ds\"]=pd.to_datetime(vaccine_number_df[\"ds\"])\n",
        "vaccine_number_df.columns"
      ],
      "id": "cd8c1d77",
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ds', 'y'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AjnGIjeX3_Dd",
        "outputId": "911221fd-3fb7-40af-ff50-c90f2d59c99b"
      },
      "source": [
        "vaccine_number_df.dtypes"
      ],
      "id": "AjnGIjeX3_Dd",
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ds    datetime64[ns]\n",
              "y              int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "44fca43d",
        "outputId": "203ebec0-68d9-4504-cc83-4b19c960590c"
      },
      "source": [
        "model = Prophet()\n",
        "model.fit(vaccine_number_df)"
      ],
      "id": "44fca43d",
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
            "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<fbprophet.forecaster.Prophet at 0x7f6ce76711d0>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e4107aa8"
      },
      "source": [
        "## In-Sample Forecast"
      ],
      "id": "e4107aa8"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7ShpBC_36Dtg",
        "outputId": "5678a9ca-c686-488a-b913-562682c915f7"
      },
      "source": [
        "vaccine_number_df [\"ds\"].agg({\"Max\":\"max\",\"Min\":\"min\"})"
      ],
      "id": "7ShpBC_36Dtg",
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Max   2021-03-18\n",
              "Min   2020-01-03\n",
              "Name: ds, dtype: datetime64[ns]"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0965e7f9"
      },
      "source": [
        "# future = [] \n",
        "# for i in range(1, 13):\n",
        "#     date = \"2021-%02d\" % i\n",
        "#     future.append(date)\n",
        "future = pd.DataFrame([\"2021-01\",\"2021-03\"], columns = [\"ds\"])\n",
        "future[\"ds\"]=pd.to_datetime(future[\"ds\"])"
      ],
      "id": "0965e7f9",
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 492
        },
        "id": "6388e4d9",
        "outputId": "a4d06c40-9a2e-41a7-80b3-13f5daef665c"
      },
      "source": [
        "forecast = model.predict(future)\n",
        "\n",
        "print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())\n",
        "\n",
        "model.plot(forecast)\n",
        "plt.show()"
      ],
      "id": "6388e4d9",
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "          ds        yhat  yhat_lower  yhat_upper\n",
            "0 2021-01-01  239.865481 -179.974268  616.486405\n",
            "1 2021-03-01  252.615933 -174.114731  617.793707\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "41ba08d3"
      },
      "source": [
        "## Out of Sample Forecast"
      ],
      "id": "41ba08d3"
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "45f8be4b"
      },
      "source": [
        "future = [] \n",
        "for i in range(4, 13):\n",
        "    date = \"2021-%02d\" % i\n",
        "    future.append(date)\n",
        "future = pd.DataFrame(future, columns = [\"ds\"])\n",
        "future[\"ds\"]=pd.to_datetime(future[\"ds\"])"
      ],
      "id": "45f8be4b",
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 543
        },
        "id": "05b449ca",
        "outputId": "a0ef677c-be8a-4d93-a17a-d432d90663d8"
      },
      "source": [
        "forecast = model.predict(future)\n",
        "\n",
        "print(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']].head())\n",
        "\n",
        "model.plot(forecast)\n",
        "plt.show()"
      ],
      "id": "05b449ca",
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "          ds        yhat  yhat_lower  yhat_upper\n",
            "0 2021-04-01  299.866373  -80.392457  701.076075\n",
            "1 2021-05-01  249.876775 -148.190084  643.037765\n",
            "2 2021-06-01  302.717026  -92.474888  678.162826\n",
            "3 2021-07-01  334.757535  -37.811574  715.658414\n",
            "4 2021-08-01  237.499262 -147.244644  637.316248\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 720x432 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "62d4809e"
      },
      "source": [
        "## Evaluate efficency "
      ],
      "id": "62d4809e"
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "4a9cbd2b",
        "outputId": "abb1509d-99c2-4593-c434-0dad32b1cbca"
      },
      "source": [
        "from sklearn.metrics import mean_absolute_error\n",
        "y_true = vaccine_number_df['y'][-9:].values\n",
        "y_pred = forecast['yhat'].values\n",
        "mae = mean_absolute_error(y_true, y_pred)\n",
        "print(f'MAE: {mae:.3f}')\n",
        "plt.plot(y_true, label='Actual')\n",
        "plt.plot(y_pred, label='Predicted')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "id": "4a9cbd2b",
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "MAE: 256.407\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DcwTIc-L8Nvw",
        "outputId": "39014e67-1ab0-46cc-c17d-6b4b070c9d76"
      },
      "source": [
        "vaccine_number_df[\"y\"]"
      ],
      "id": "DcwTIc-L8Nvw",
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       589\n",
              "1       516\n",
              "2         1\n",
              "3       437\n",
              "4         5\n",
              "       ... \n",
              "112     153\n",
              "113     428\n",
              "114     645\n",
              "115    1087\n",
              "116    1033\n",
              "Name: y, Length: 117, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    }
  ]
}